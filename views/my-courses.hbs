{{!-- my-courses.hbs - User's purchased courses page --}}

<div class="my-courses-page">
  <div class="page-header">
    <h1>My Courses</h1>
    <p class="subtitle">Continue your learning journey</p>
  </div>

  {{#if error}}
    <div class="alert alert-error">
      <strong>Error:</strong> {{error}}
    </div>
  {{/if}}

  <div class="courses-stats">
    <div class="stat-item">
      <div class="stat-icon">üìö</div>
      <div class="stat-content">
        <span class="stat-number">{{courseCount}}</span>
        <span class="stat-label">Total Courses</span>
      </div>
    </div>
    
    <div class="stat-item">
      <div class="stat-icon">‚è≥</div>
      <div class="stat-content">
        <span class="stat-number">{{inProgressCount}}</span>
        <span class="stat-label">In Progress</span>
      </div>
    </div>
    
    <div class="stat-item">
      <div class="stat-icon">‚úÖ</div>
      <div class="stat-content">
        <span class="stat-number">{{completedCount}}</span>
        <span class="stat-label">Completed</span>
      </div>
    </div>
    
    <div class="stat-item">
      <div class="stat-icon">üèÜ</div>
      <div class="stat-content">
        <span class="stat-number">{{certificatesCount}}</span>
        <span class="stat-label">Certificates</span>
      </div>
    </div>
  </div>

  <div class="filter-section">
    <div class="filter-options">
      <button class="filter-btn active" data-filter="all">All Courses</button>
      <button class="filter-btn" data-filter="in-progress">In Progress</button>
      <button class="filter-btn" data-filter="completed">Completed</button>
      <button class="filter-btn" data-filter="not-started">Not Started</button>
    </div>
    
    <div class="sort-options">
      <select id="sortBy" class="sort-select">
        <option value="recent">Recently Purchased</option>
        <option value="name">Course Name</option>
        <option value="progress">Progress</option>
        <option value="price">Price</option>
      </select>
    </div>
  </div>

  {{#if courses.length}}
    <div class="courses-grid" id="coursesGrid">
      {{#each courses}}
        <div class="course-card" data-course-id="{{this.id}}">
          <div class="course-image">
            <img src="{{this.thumbnail_image}}" alt="{{this.title}}" 
                 onerror="this.src='/static/default-course.jpg'">
            <div class="progress-overlay">
              <div class="progress-ring">
                <svg class="progress-svg" viewBox="0 0 36 36">
                  <path class="progress-bg" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"/>
                  <path class="progress-fill" stroke-dasharray="{{this.progress_percentage}}, 100" 
                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"/>
                </svg>
                <div class="progress-text">{{this.progress_percentage}}%</div>
              </div>
            </div>
          </div>
          
          <div class="course-content">
            <div class="course-header">
              <h3 class="course-title">{{this.title}}</h3>
              <div class="status-badge status-{{#if (gt this.progress_percentage 0)}}{{#if (eq this.progress_percentage 100)}}completed{{else}}in-progress{{/if}}{{else}}not-started{{/if}}">
                {{#if (eq this.progress_percentage 100)}}‚úÖ Completed
                {{else if (gt this.progress_percentage 0)}}‚è≥ In Progress
                {{else}}üìö Not Started
                {{/if}}
              </div>
            </div>
            
            <p class="course-description">{{this.description}}</p>
            
            <div class="course-meta">
              <span class="meta-item">
                <span class="meta-icon">ÔøΩ‚Äçüè´</span>
                {{this.instructor}}
              </span>
              <span class="meta-item">
                <span class="meta-icon">üìÖ</span>
                Purchased {{formatDate this.purchased_at}}
              </span>
            </div>
            
            <div class="progress-bar">
              <div class="progress-fill" style="width: {{this.progress_percentage}}%"></div>
            </div>
            
            <div class="course-actions">
              {{#if (eq this.progress_percentage 100)}}
                <a href="/my-courses/{{this.id}}/continue" class="btn btn-primary">
                  Review Course
                </a>
                <a href="/courses/{{this.id}}" class="btn btn-secondary">
                  Course Details
                </a>
              {{else}}
                {{#if this.next_module_id}}
                  <a href="/my-courses/{{this.id}}/continue" class="btn btn-primary">
                    {{#if (eq this.progress_percentage 0)}}Start Learning{{else}}Continue Learning{{/if}}
                  </a>
                {{else}}
                  <a href="/courses/{{this.id}}/modules" class="btn btn-primary">
                    {{#if (eq this.progress_percentage 0)}}Start Learning{{else}}Continue Learning{{/if}}
                  </a>
                {{/if}}
                <a href="/courses/{{this.id}}" class="btn btn-secondary">
                  Course Details
                </a>
              {{/if}}
            </div>
          </div>
        </div>
      {{/each}}
    </div>

    {{#if (gt totalPages 1)}}
      <div class="pagination">
        {{#if (gt currentPage 1)}}
          <a href="?page={{subtract currentPage 1}}" class="pagination-btn">
            ‚Üê Previous
          </a>
        {{/if}}

        {{#each (range 1 totalPages)}}
          {{#if (eq this ../currentPage)}}
            <span class="pagination-btn active">{{this}}</span>
          {{else}}
            <a href="?page={{this}}" class="pagination-btn">{{this}}</a>
          {{/if}}
        {{/each}}

        {{#if (lt currentPage totalPages)}}
          <a href="?page={{add currentPage 1}}" class="pagination-btn">
            Next ‚Üí
          </a>
        {{/if}}
      </div>
    {{/if}}
  {{else}}
    <div class="empty-state">
      <div class="empty-icon">üìö</div>
      <h3>No Courses Yet</h3>
      <p>You haven't purchased any courses yet. Browse our catalog to get started!</p>
      <a href="/browse" class="btn btn-primary">Browse Courses</a>
    </div>
  {{/if}}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Filter functionality
    const filterButtons = document.querySelectorAll('.filter-btn');
    const courseCards = document.querySelectorAll('.course-card');
    const sortSelect = document.getElementById('sortBy');

    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Update active filter button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        const filter = this.getAttribute('data-filter');
        
        // Filter courses
        courseCards.forEach(card => {
          if (filter === 'all') {
            card.style.display = 'block';
          } else {
            const status = card.getAttribute('data-status');
            card.style.display = status === filter ? 'block' : 'none';
          }
        });
        
        updateEmptyState();
      });
    });

    // Sort functionality
    sortSelect.addEventListener('change', function() {
      const sortBy = this.value;
      const coursesGrid = document.getElementById('coursesGrid');
      const cards = Array.from(courseCards);
      
      cards.sort((a, b) => {
        switch (sortBy) {
          case 'name':
            const nameA = a.querySelector('.course-title').textContent.toLowerCase();
            const nameB = b.querySelector('.course-title').textContent.toLowerCase();
            return nameA.localeCompare(nameB);
          
          case 'progress':
            const progressA = parseFloat(a.querySelector('.progress-text').textContent) || 0;
            const progressB = parseFloat(b.querySelector('.progress-text').textContent) || 0;
            return progressB - progressA;
          
          case 'price':
            // This would need price data from the backend
            return 0;
          
          case 'recent':
          default:
            return 0; // Keep original order for recent purchases
        }
      });
      
      // Re-append sorted cards
      cards.forEach(card => coursesGrid.appendChild(card));
    });

    function updateEmptyState() {
      const visibleCards = Array.from(courseCards).filter(card => 
        card.style.display !== 'none'
      );
      
      const emptyState = document.querySelector('.empty-state');
      if (emptyState) {
        emptyState.style.display = visibleCards.length === 0 ? 'block' : 'none';
      }
    }
  });
</script>

<style>
  .my-courses-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .page-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .page-header h1 {
    font-size: 2.5rem;
    color: #2d3748;
    margin-bottom: 0.5rem;
  }

  .subtitle {
    font-size: 1.1rem;
    color: #718096;
    margin: 0;
  }

  .courses-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .stat-item {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    display: flex;
    align-items: center;
    gap: 1rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s;
  }

  .stat-item:hover {
    transform: translateY(-2px);
  }

  .stat-icon {
    font-size: 2rem;
  }

  .stat-content {
    display: flex;
    flex-direction: column;
  }

  .stat-number {
    font-size: 1.8rem;
    font-weight: bold;
    color: #2d3748;
  }

  .stat-label {
    font-size: 0.9rem;
    color: #718096;
  }

  .filter-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    gap: 1rem;
  }

  .filter-options {
    display: flex;
    gap: 0.5rem;
  }

  .filter-btn {
    padding: 0.5rem 1rem;
    border: 1px solid #e2e8f0;
    background: white;
    color: #4a5568;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s;
  }

  .filter-btn:hover,
  .filter-btn.active {
    background: #4c51bf;
    color: white;
    border-color: #4c51bf;
  }

  .sort-select {
    padding: 0.5rem;
    border: 1px solid #e2e8f0;
    border-radius: 4px;
    background: white;
  }

  .courses-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .course-card {
    background: white;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .course-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .course-image {
    position: relative;
    height: 180px;
    overflow: hidden;
  }

  .course-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .progress-overlay {
    position: absolute;
    top: 1rem;
    right: 1rem;
  }

  .progress-ring {
    position: relative;
    width: 50px;
    height: 50px;
  }

  .progress-svg {
    width: 100%;
    height: 100%;
    transform: rotate(-90deg);
  }

  .progress-bg {
    fill: none;
    stroke: rgba(255, 255, 255, 0.3);
    stroke-width: 2;
  }

  .progress-fill {
    fill: none;
    stroke: #4c51bf;
    stroke-width: 2;
    stroke-linecap: round;
    transition: stroke-dasharray 0.3s;
  }

  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 0.7rem;
    font-weight: bold;
    color: white;
  }

  .course-content {
    padding: 1.5rem;
  }

  .course-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
    gap: 1rem;
  }

  .course-title {
    font-size: 1.25rem;
    color: #2d3748;
    margin: 0;
    flex: 1;
    line-height: 1.3;
  }

  .status-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 600;
    white-space: nowrap;
  }

  .status-completed {
    background: #c6f6d5;
    color: #22543d;
  }

  .status-in-progress {
    background: #fed7c3;
    color: #c05621;
  }

  .status-not-started {
    background: #e2e8f0;
    color: #4a5568;
  }

  .course-description {
    color: #4a5568;
    margin: 0 0 1rem 0;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .course-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.875rem;
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: #718096;
  }

  .meta-icon {
    font-size: 0.8rem;
  }

  .progress-bar {
    width: 100%;
    height: 4px;
    background: #e2e8f0;
    border-radius: 2px;
    margin-bottom: 1.5rem;
    overflow: hidden;
  }

  .progress-bar .progress-fill {
    height: 100%;
    background: #4c51bf;
    border-radius: 2px;
    transition: width 0.3s;
  }

  .course-actions {
    display: flex;
    gap: 0.75rem;
  }

  .btn {
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    text-align: center;
    transition: all 0.2s;
    flex: 1;
  }

  .btn-primary {
    background: #4c51bf;
    color: white;
    border: 1px solid #4c51bf;
  }

  .btn-primary:hover {
    background: #4c51bf;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(76, 81, 191, 0.4);
    color: white;
  }

  .btn-secondary {
    background: white;
    color: #4a5568;
    border: 1px solid #e2e8f0;
  }

  .btn-secondary:hover {
    background: #f7fafc;
    border-color: #cbd5e0;
    color: #4a5568;
  }

  .pagination {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 2rem;
  }

  .pagination-btn {
    padding: 0.5rem 1rem;
    border: 1px solid #e2e8f0;
    background: white;
    color: #4a5568;
    text-decoration: none;
    border-radius: 4px;
    transition: all 0.2s;
  }

  .pagination-btn:hover,
  .pagination-btn.active {
    background: #4c51bf;
    color: white;
    border-color: #4c51bf;
  }

  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    background: white;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }

  .empty-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }

  .empty-state h3 {
    font-size: 1.5rem;
    color: #2d3748;
    margin-bottom: 1rem;
  }

  .empty-state p {
    color: #718096;
    margin-bottom: 2rem;
    font-size: 1.1rem;
  }

  .alert {
    padding: 1rem;
    border-radius: 4px;
    margin-bottom: 1rem;
  }

  .alert-error {
    background: #fed7d7;
    color: #9b2c2c;
    border: 1px solid #feb2b2;
  }

  @media (max-width: 768px) {
    .my-courses-page {
      padding: 1rem;
    }
    
    .courses-stats {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .filter-section {
      flex-direction: column;
      align-items: stretch;
    }
    
    .filter-options {
      justify-content: center;
      flex-wrap: wrap;
    }
    
    .courses-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .course-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .course-actions {
      flex-direction: column;
    }
  }
</style>
